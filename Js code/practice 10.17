
module.exports.loop = function () {
    for(let name in Memory.creeps) {
        if(!Game.creeps[name]) {
            delete Memory.creeps[name];
            console.log('清除記憶:', name);
        }
    }
}

// ？？ 下面這段其實邏輯蠻難的 < 待學習 可以先用 for 寫
    // // === 計算各角色數量 ===
    // const harvesters = _.filter(Game.creeps, c => c.memory.role == 'harvester');
    // const upgraders = _.filter(Game.creeps, c => c.memory.role == 'upgrader');
    // const builders = _.filter(Game.creeps, c => c.memory.role == 'builder');
    // console.log('📊 Harvesters:' + harvesters.length + 
    //             ' | Upgraders:' + upgraders.length + 
    //             ' | Builders:' + builders.length);


const spawn = Game.spawns['Spawn'] || Object.values(Game.spawns)[0];
if (!spawn) return;
const room = spawn.room;

// 下面這段就是為了放置看看有沒有container  篩選條件就是用位置
// const sources = room.find(FIND_SOURCES);
// for (let source of sources) {
//     if (source.pos.x > 35 && source.pos.y > 16 {
//         const hasContainer = room.find(FIND_STRUCTURES, {











// }

function allowedExtensionsByRCL(level) {

}